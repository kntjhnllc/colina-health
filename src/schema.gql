# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Appointment {
  appointmentId: Int!
  dateCreated: DateTime!
  appointmentDate: DateTime!
  appointmentTime: String!
  details: String!
  appointmentStatus: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type EmergencyContact {
  contactId: Int!
  firstName: String!
  lastName: String!
  phoneNumber: String!
  patientRelationship: String!
  city: String!
  state: String!
  zip: String!
  country: String!
}

type LabResults {
  labResultsNo: Int!
  date: DateTime!
  hemoglobinA1c: String!
  fastingBloodGlucose: String!
  totalCholesterol: String!
  ldlCholesterol: String!
  hdlCholesterol: String!
  triglycerides: String!
}

type MedicalHistory {
  medicalHistoryNo: Int!
  allergies: String!
  medicalConditions: String!
  surgeries: String!
  familyHistory: String!
}

type Medication {
  medicationNo: Int!
  medicationDate: DateTime!
  comments: String!
  medicationStatus: String!
}

type Notes {
  noteNo: Int!
  date: DateTime!
  notes: String!
}

type VitalSigns {
  vitalSignsNo: Int!
  date: DateTime!
  bloodPressure: String!
  heartRate: String!
  temperature: String!
  respiratoryRate: String!
}

type PatientInformation {
  patientId: Int!
  firstName: String!
  lastName: String!
  age: Int!
  dateOfBirth: DateTime!
  gender: String!
  city: String!
  state: String!
  zip: String!
  country: String!
  phoneNo: String!
  allergies: String!
  codeStatus: String!
  medications: [Medication!]
  vital_signs: [VitalSigns!]
  medical_history: [MedicalHistory!]
  lab_results: [LabResults!]
  notes: [Notes!]
  appointment: [Appointment!]
  emergency_contact: [EmergencyContact!]
}

type Query {
  getAllPatientsWithDetails: [PatientInformation!]!
  getPatientInformation(patientId: Int!): PatientInformation!
  getPatientMedication(patientId: Int!): [Medication!]!
  getPatientVitalSigns(patientId: Int!): [VitalSigns!]!
  getPatientMedicalHistory(patientId: Int!): [MedicalHistory!]!
  getPatientLabResults(patientId: Int!): [LabResults!]!
  getPatientNotes(patientId: Int!): [Notes!]!
  getPatientAppointment(patientId: Int!): [Appointment!]!
  getPatientEmergencyContact(patientId: Int!): [EmergencyContact!]!
}

type Mutation {
  createPatientInformation(createPatientInformationInput: CreatePatientInformationInput!): PatientInformation!
  updatePatientInformation(updatePatientInformationInput: UpdatePatientInformationInput!): PatientInformation!
  createMedicationForPatient(createMedicationForPatientInput: CreateMedicationForPatientInput!): Medication!
  createVitalSignsForPatient(createVitalSignsForPatientInput: CreateVitalSignsForPatientInput!): VitalSigns!
  updateVitalSignsForPatient(updateVitalSignsForPatientInput: UpdateVitalSignsForPatientInput!): VitalSigns!
  createMedicalHistoryForPatient(createMedicalHistoryForPatientInput: CreateMedicalHistoryForPatientInput!): MedicalHistory!
  updateMedicalHistoryForPatient(updateMedicalHistoryForPatientInput: UpdateMedicalHistoryForPatientInput!): MedicalHistory!
  createLabResultsForPatient(createLabResultsForPatientInput: CreateLabResultsForPatientInput!): LabResults!
  updateLabResultsForPatient(updateLabResultsForPatientInput: UpdateLabResultsForPatientInput!): LabResults!
  createNotesForPatient(createNotesForPatientInput: CreateNotesForPatientInput!): Notes!
  updateNotesForPatient(updateNotesForPatientInput: UpdateNotesForPatientInput!): Notes!
  createAppointmentForPatient(createAppointmentForPatientInput: CreateAppointmentForPatientInput!): Appointment!
  updateAppointmentForPatient(updateAppointmentForPatientInput: UpdateAppointmentForPatientInput!): Appointment!
  createEmergencyContactForPatient(createEmergencyContactForPatientInput: CreateEmergencyContactForPatientInput!): EmergencyContact!
  updateEmergencyContactForPatient(updateEmergencyContactForPatientInput: UpdateEmergencyContactForPatientInput!): EmergencyContact!
}

input CreatePatientInformationInput {
  firstName: String!
  lastName: String!
  age: Float!
  dateOfBirth: DateTime!
  gender: String!
  city: String!
  state: String!
  zip: String!
  country: String!
  phoneNo: String!
  allergies: String!
  codeStatus: String!
}

input UpdatePatientInformationInput {
  patientId: Int!
  firstName: String
  lastName: String
  age: Float
  dateOfBirth: DateTime
  gender: String
  city: String
  state: String
  zip: String
  country: String
  phoneNo: String
  allergies: String
  codeStatus: String
}

input CreateMedicationForPatientInput {
  patientId: Int!
  medicationDate: DateTime!
  comments: String!
  medicationStatus: String!
}

input CreateVitalSignsForPatientInput {
  patientId: Int!
  date: DateTime!
  bloodPressure: String!
  heartRate: String!
  temperature: String!
  respiratoryRate: String!
}

input UpdateVitalSignsForPatientInput {
  patientId: Float!
  vitalSignsNo: Float!
  date: DateTime
  bloodPressure: String
  heartRate: String
  temperature: String
  respiratoryRate: String
}

input CreateMedicalHistoryForPatientInput {
  patientId: Int!
  allergies: String!
  medicalCondition: String!
  surgeries: String!
  familyHistory: String!
}

input UpdateMedicalHistoryForPatientInput {
  patientId: Float!
  medicalHistoryNo: Float!
  allergies: String
  medicalConditions: String
  surgeries: String
  familyHistory: String
}

input CreateLabResultsForPatientInput {
  patientId: Int!
  date: DateTime!
  hemoglobinA1c: String!
  fastingBloodGlucose: String!
  totalCholesterol: String!
  ldlCholesterol: String!
  hdlCholesterol: String!
  triglycerides: String!
}

input UpdateLabResultsForPatientInput {
  patientId: Float!
  labResultsNo: Float!
  date: DateTime
  hemoglobinA1C: String
  fastingBloodGlucose: String
  totalCholesterol: String
  ldlCholesterol: String
  hdlCholesterol: String
  triglycerides: String
}

input CreateNotesForPatientInput {
  patientId: Float!
  date: DateTime!
  notes: String!
}

input UpdateNotesForPatientInput {
  patientId: Float!
  noteNo: Float!
  date: DateTime
  notes: String
}

input CreateAppointmentForPatientInput {
  patientId: Float!
  dateCreated: DateTime!
  appointmentDate: DateTime!
  appointmentTime: String!
  details: String!
  appointmentStatus: String!
}

input UpdateAppointmentForPatientInput {
  patientId: Float!
  appointmentId: Float!
  dateCreated: DateTime
  appointmentDate: DateTime
  appointmentTime: String
  details: String
  appointmentStatus: String
}

input CreateEmergencyContactForPatientInput {
  patientId: Float!
  firstName: String!
  lastName: String!
  phoneNumber: String!
  patientRelationship: String!
  city: String!
  state: String!
  zip: String!
  country: String!
}

input UpdateEmergencyContactForPatientInput {
  patientId: Float!
  contactId: Float!
  firstName: String
  lastName: String
  phoneNumber: String
  patientRelationship: String
  city: String
  state: String
  zip: String
  country: String
}